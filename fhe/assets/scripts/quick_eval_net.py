import numpy as np
import pandas as pd

def load_weight(idx, prefix="./"):
    mat = pd.read_csv(f"{prefix}weights_{idx}_relu.txt",sep=r"\s+",header=None)
    return mat.to_numpy().T

def load_bias(idx, prefix="./"):
    return pd.read_csv(f"{prefix}biases_{idx}_relu.txt",header=None).to_numpy().squeeze()


def eval_net(v_in, prefix="./"):
    weights = []
    biases = []
    for i in range(5):
        weights.append(load_weight(i, prefix=prefix))
        biases.append(load_bias(i,prefix=prefix))

    inter = v_in
    for i in range(4):

        print("Layer in", inter)
        inter = weights[i] @ inter
        inter += biases[i]

        # inter[inter < 0] = 0
        inter = in

        print("Layer out", inter)

    inter = weights[-1] @ inter + biases[-1]
    # no softmax for now
    return inter

if __name__ == "__main__":
    vec = [1.0,0.7589820623397827,0.473053902387619,0.193113774061203,0.1422155648469925,0.17664670944213867,0.16167664527893066,0.1422155648469925,0.121257483959198,0.10778442770242692,0.09580838680267333,0.07934131473302841,0.07634730637073517,0.06137724593281746,0.053892213851213455,0.05838323384523392,0.056886225938797,0.05988023802638054,0.07934131473302841,0.09431137889623642,0.11526945978403091,0.14970059692859647,0.17664670944213867,0.23353293538093567,0.28143712878227234,0.30838322639465326,0.351796418428421,0.378742516040802,0.3922155797481537,0.40419161319732666,0.3997006118297577,0.39520958065986633,0.38323354721069336,0.3577844202518463,0.351796418428421,0.344311386346817,0.31137725710868835,0.29191616177558893,0.27544909715652466,0.26047903299331665,0.2544910311698913,0.23802395164966583,0.2440119832754135,0.25299400091171265,0.25,0.2544910311698913,0.2634730637073517,0.26047903299331665,0.264970064163208,0.2559880316257477,0.24700598418712613,0.2559880316257477,0.24700598418712613,0.23952095210552213,0.24700598418712613,0.2440119832754135,0.2440119832754135,0.235029935836792,0.23353293538093567,0.24700598418712613,0.23952095210552213,0.2200598865747452,0.2200598865747452,0.23802395164966583,0.24550898373126984,0.23353293538093567,0.2365269511938095,0.2514970004558563,0.22455090284347531,0.20359280705451965,0.2185628712177277,0.2095808386802673,0.2065868228673935,0.20209580659866333,0.21107783913612363,0.22455090284347531,0.21107783913612363,0.1976047903299332,0.20359280705451965,0.405688613653183,0.772455096244812,0.9745509028434752,0.7365269660949707,0.3802395164966583,0.11976047605276108,0.0,0.0778443142771721,0.13173653185367584,0.11676646769046783,0.10179640352725983,0.1002994030714035,0.10179640352725983,0.09580838680267333,0.08682634681463242,0.10479041934013365,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0]
    vec = np.array(vec)

    res = eval_net(vec, prefix="../configs/default/")

    print(res)